<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Update_Values_To_Measurement_Record</name>
        <label>Update Values To Measurement Record</label>
        <locationX>50</locationX>
        <locationY>576</locationY>
        <assignmentItems>
            <assignToReference>Get_Measurement_record.Opportunity__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Measurement_record.Opportunity_History__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OppHistoryValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Measurement_Record</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Measurement_record_is_there</name>
        <label>Check if Measurement record is there</label>
        <locationX>314</locationX>
        <locationY>360</locationY>
        <defaultConnector>
            <targetReference>Create_Measurement_Record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Measurement_record_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Measurement_record</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Get_Measurement_record.Opportunity__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetOldOpp</targetReference>
            </connector>
            <label>If Measurement record found</label>
        </rules>
        <rules>
            <name>Do_nothing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Measurement_record</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Get_Measurement_record.Opportunity__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Id</elementReference>
                </rightValue>
            </conditions>
            <label>Do nothing</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>OppHistoryValue</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!Get_Measurement_record.Opportunity_History__c}), {!GetOldOpp.Name}, {!Get_Measurement_record.Opportunity_History__c} &amp;&apos;; &apos;&amp;  {!GetOldOpp.Name})</expression>
    </formulas>
    <interviewLabel>One Time - Create Measurement Records {!$Flow.CurrentDateTime}</interviewLabel>
    <label>One Time - Create Measurement Records</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Measurement_Record</name>
        <label>Create Measurement Record</label>
        <locationX>578</locationX>
        <locationY>468</locationY>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>$Record.Account.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Measurement__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Measurement_record</name>
        <label>Get Measurement record</label>
        <locationX>314</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Measurement_record_is_there</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Measurement__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetOldOpp</name>
        <label>GetOldOpp</label>
        <locationX>50</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Values_To_Measurement_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Measurement_record.Opportunity__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Measurement_Record</name>
        <label>Update Measurement Record</label>
        <locationX>50</locationX>
        <locationY>684</locationY>
        <inputReference>Get_Measurement_record</inputReference>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Measurement_record</targetReference>
        </connector>
        <filterLogic>((1 OR 2 OR 3) AND 4)</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Onboarding</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Lost</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Cancellation</stringValue>
            </value>
        </filters>
        <filters>
            <field>Contract_Signed_Date__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <schedule>
            <frequency>Once</frequency>
            <startDate>2024-05-14</startDate>
            <startTime>07:30:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
</Flow>
